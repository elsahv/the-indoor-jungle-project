{"version":3,"file":"index.es.js","sources":["../src/app.js","../src/index.js"],"sourcesContent":["import React from \"react\";\nimport Pagination from \"./index\";\nconst App = () => {\n  const action = () => {\n    console.log(\"working\");\n  };\n  return (\n    <div>\n      This is the app <span />\n      <Pagination action={action} postsLength={15} />\n    </div>\n  );\n};\nexport default App;\n","import React, { useState } from \"react\";\nimport App from \"./app\";\nimport ReactDOM from \"react-dom\";\n\nfunction Pagination(props) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [range, setRange] = useState(\"0...5\");\n  const buttons = [];\n  const postsLength = props.postsLength;\n  const postsPerPage = 5;\n  const pages = Math.ceil(postsLength / postsPerPage);\n\n  // Paginate Function to determine query range\n  const PaginateButton = props => {\n    const page = props.page + 1;\n\n    const changePage = (page, range) => {\n      setCurrentPage(page);\n      // const formula = (page - 1) * postsPerPage;\n      const firstNumber = postsPerPage * (page - 1);\n      const secondNumber = firstNumber + postsPerPage;\n      const newRange = `${firstNumber}...${secondNumber}`;\n      setRange(newRange);\n      if (page !== currentPage) {\n        props.action(page, newRange);\n      } else {\n        console.log(\"Returning nothing because already on page üïµÔ∏è‚Äç!\");\n      }\n    };\n    return (\n      <li\n        className={page === currentPage ? \"active\" : \"\"}\n        onClick={() => changePage(page, range)}\n      >\n        {page}\n      </li>\n    );\n  };\n\n  // Assign Buttons\n  for (let i = 0; i < pages; i++) {\n    buttons.push(<PaginateButton page={i} key={i} action={props.action} />);\n  }\n  // Return Pagination\n  return (\n    <React.Fragment>\n      {postsLength > 1 ? <ul className=\"pagePagination\">{buttons}</ul> : \"\"}\n    </React.Fragment>\n  );\n}\n\nexport default Pagination;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"names":["App","action","log","Pagination","props","useState","currentPage","setCurrentPage","range","setRange","buttons","postsLength","postsPerPage","pages","Math","ceil","PaginateButton","page","changePage","firstNumber","secondNumber","newRange","i","push","ReactDOM","render","document","getElementById"],"mappings":";;;AAEA,IAAMA,MAAM,SAANA,GAAM,GAAM;MACVC,SAAS,SAATA,MAAS,GAAM;YACXC,GAAR,CAAY,SAAZ;GADF;SAIE;;;;qCAAA;wBAEG,UAAD,IAAY,QAAQD,MAApB,EAA4B,aAAa,EAAzC;GAHJ;CAJF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA,SAASE,UAAT,CAAoBC,KAApB,EAA2B;kBACaC,SAAS,CAAT,CADb;;MAClBC,WADkB;MACLC,cADK;;mBAECF,SAAS,OAAT,CAFD;;MAElBG,KAFkB;MAEXC,QAFW;;MAGnBC,UAAU,EAAhB;MACMC,cAAcP,MAAMO,WAA1B;MACMC,eAAe,CAArB;MACMC,QAAQC,KAAKC,IAAL,CAAUJ,cAAcC,YAAxB,CAAd;;;MAGMI,iBAAiB,SAAjBA,cAAiB,QAAS;QACxBC,OAAOb,MAAMa,IAAN,GAAa,CAA1B;;QAEMC,aAAa,SAAbA,UAAa,CAACD,IAAD,EAAOT,KAAP,EAAiB;qBACnBS,IAAf;;UAEME,cAAcP,gBAAgBK,OAAO,CAAvB,CAApB;UACMG,eAAeD,cAAcP,YAAnC;UACMS,WAAcF,WAAd,WAA+BC,YAArC;eACSC,QAAT;UACIJ,SAASX,WAAb,EAA0B;cAClBL,MAAN,CAAagB,IAAb,EAAmBI,QAAnB;OADF,MAEO;gBACGnB,GAAR,CAAY,iDAAZ;;KAVJ;WAcE;;;mBACae,SAASX,WAAT,GAAuB,QAAvB,GAAkC,EAD/C;iBAEW;iBAAMY,WAAWD,IAAX,EAAiBT,KAAjB,CAAN;;;;KAHb;GAhBF;;;OA2BK,IAAIc,IAAI,CAAb,EAAgBA,IAAIT,KAApB,EAA2BS,GAA3B,EAAgC;YACtBC,IAAR,CAAa,oBAAC,cAAD,IAAgB,MAAMD,CAAtB,EAAyB,KAAKA,CAA9B,EAAiC,QAAQlB,MAAMH,MAA/C,GAAb;;;SAIA;SAAA,CAAO,QAAP;;kBACiB,CAAd,GAAkB;;QAAI,WAAU,gBAAd;;KAAlB,GAAkE;GAFvE;;;AASFuB,SAASC,MAAT,CAAgB,oBAAC,GAAD,OAAhB,EAAyBC,SAASC,cAAT,CAAwB,MAAxB,CAAzB;;;;"}